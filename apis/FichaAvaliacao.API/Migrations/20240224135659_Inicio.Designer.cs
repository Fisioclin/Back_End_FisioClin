// <auto-generated />
using System;
using FichaAvaliacao.API.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FichaAvaliacao.API.Migrations
{
    [DbContext(typeof(BDContext))]
    [Migration("20240224135659_Inicio")]
    partial class Inicio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.ADM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AvaliacaoSubjetivaDorId")
                        .HasColumnType("int");

                    b.Property<int>("Coluna")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamesComplementares")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoniometriaColuna")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoniometriaMidMie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoniometriaMsdMse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MID")
                        .HasColumnType("int");

                    b.Property<int>("MIE")
                        .HasColumnType("int");

                    b.Property<int>("MSD")
                        .HasColumnType("int");

                    b.Property<int>("MSE")
                        .HasColumnType("int");

                    b.Property<string>("Perimetria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TestesEspeciais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UsuarioAtualizacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioCriacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AvaliacaoSubjetivaDorId");

                    b.ToTable("ADM");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.Anamnese", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Altura")
                        .HasColumnType("float");

                    b.Property<string>("CID10")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiagnosticoClinico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HDA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("IMC")
                        .HasColumnType("float");

                    b.Property<string>("MedicoResponsavel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.Property<int?>("ProfissionalId")
                        .HasColumnType("int");

                    b.Property<string>("QueixaPrincipal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioAtualizacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioCriacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProfissionalId");

                    b.ToTable("Anamneses");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.AntecedentesFamiliares", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AnamneseId")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioAtualizacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioCriacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AnamneseId");

                    b.ToTable("AntecedentesFamiliares");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.AntecedentesPessoais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AnamneseId")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioAtualizacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioCriacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AnamneseId");

                    b.ToTable("AntecedentesPessoais");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.AvaliacaoSubjetivaDor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Caracteristicas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Duracao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatoresAgravantes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatoresAtenuantes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioAtualizacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioCriacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Avaliacaos");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.Cadastro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cor")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Naturalidade")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Profissao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("UsuarioAtualizacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioCriacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Cadastro", (string)null);
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioAtualizacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioCriacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.Evolucao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEvolucao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FichaId")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PressaoFinal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PressaoInicial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioAtualizacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioCriacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FichaId");

                    b.ToTable("Evolucaos");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.ExameFisico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ADMId")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Inspecao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Palpacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioAtualizacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioCriacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ADMId");

                    b.ToTable("ExameFisico");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.Ficha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AnamneseId")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataAvaliacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExameFisicoId")
                        .HasColumnType("int");

                    b.Property<int?>("ObjetivosCondutaId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioAtualizacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioCriacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AnamneseId");

                    b.HasIndex("ExameFisicoId");

                    b.HasIndex("ObjetivosCondutaId");

                    b.ToTable("Fichas");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.Medicamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AnamneseId")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioAtualizacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioCriacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AnamneseId");

                    b.ToTable("Medicamentos");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.Musculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioAtualizacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioCriacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Musculos");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.ObjetivosCondutas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CondutaFisioterapeutica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiagnosticoTerapeutico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjetivosTratamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfissionalId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioAtualizacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioCriacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProfissionalId");

                    b.ToTable("ObjetivosCondutas");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioAtualizacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioCriacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.Profissao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioAtualizacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioCriacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Profissaos");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.Profissional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CadastroId")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroRegistro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profissao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioAtualizacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioCriacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Profissionals");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.TesteForcaMuscular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ADMId")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Grau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MusculoId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioAtualizacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioCriacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ADMId");

                    b.HasIndex("MusculoId");

                    b.ToTable("TesteForcaMuscular");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.ADM", b =>
                {
                    b.HasOne("FichaAvaliacao.API.Domain.Model.AvaliacaoSubjetivaDor", "AvaliacaoSubjetivaDor")
                        .WithMany()
                        .HasForeignKey("AvaliacaoSubjetivaDorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AvaliacaoSubjetivaDor");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.Anamnese", b =>
                {
                    b.HasOne("FichaAvaliacao.API.Domain.Model.Profissional", "Profissional")
                        .WithMany()
                        .HasForeignKey("ProfissionalId");

                    b.Navigation("Profissional");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.AntecedentesFamiliares", b =>
                {
                    b.HasOne("FichaAvaliacao.API.Domain.Model.Anamnese", null)
                        .WithMany("AntecedentesFamiliares")
                        .HasForeignKey("AnamneseId");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.AntecedentesPessoais", b =>
                {
                    b.HasOne("FichaAvaliacao.API.Domain.Model.Anamnese", null)
                        .WithMany("AntecedentesPessoais")
                        .HasForeignKey("AnamneseId");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.Evolucao", b =>
                {
                    b.HasOne("FichaAvaliacao.API.Domain.Model.Ficha", null)
                        .WithMany("Evolucaos")
                        .HasForeignKey("FichaId");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.ExameFisico", b =>
                {
                    b.HasOne("FichaAvaliacao.API.Domain.Model.ADM", "ADM")
                        .WithMany()
                        .HasForeignKey("ADMId");

                    b.Navigation("ADM");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.Ficha", b =>
                {
                    b.HasOne("FichaAvaliacao.API.Domain.Model.Anamnese", "Anamnese")
                        .WithMany()
                        .HasForeignKey("AnamneseId");

                    b.HasOne("FichaAvaliacao.API.Domain.Model.ExameFisico", "ExameFisico")
                        .WithMany()
                        .HasForeignKey("ExameFisicoId");

                    b.HasOne("FichaAvaliacao.API.Domain.Model.ObjetivosCondutas", "ObjetivosConduta")
                        .WithMany()
                        .HasForeignKey("ObjetivosCondutaId");

                    b.Navigation("Anamnese");

                    b.Navigation("ExameFisico");

                    b.Navigation("ObjetivosConduta");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.Medicamento", b =>
                {
                    b.HasOne("FichaAvaliacao.API.Domain.Model.Anamnese", null)
                        .WithMany("Medicamentos")
                        .HasForeignKey("AnamneseId");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.ObjetivosCondutas", b =>
                {
                    b.HasOne("FichaAvaliacao.API.Domain.Model.Profissional", "Profissional")
                        .WithMany()
                        .HasForeignKey("ProfissionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profissional");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.TesteForcaMuscular", b =>
                {
                    b.HasOne("FichaAvaliacao.API.Domain.Model.ADM", null)
                        .WithMany("TesteForcaMusculares")
                        .HasForeignKey("ADMId");

                    b.HasOne("FichaAvaliacao.API.Domain.Model.Musculo", "Musculo")
                        .WithMany()
                        .HasForeignKey("MusculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musculo");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.ADM", b =>
                {
                    b.Navigation("TesteForcaMusculares");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.Anamnese", b =>
                {
                    b.Navigation("AntecedentesFamiliares");

                    b.Navigation("AntecedentesPessoais");

                    b.Navigation("Medicamentos");
                });

            modelBuilder.Entity("FichaAvaliacao.API.Domain.Model.Ficha", b =>
                {
                    b.Navigation("Evolucaos");
                });
#pragma warning restore 612, 618
        }
    }
}
